package com.yhrjkf.woyundong.view;

import android.app.Dialog;
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Toast;

import com.kaopiz.kprogresshud.KProgressHUD;
import com.vise.log.ViseLog;
import com.vise.xsnow.event.BusFactory;
import com.vise.xsnow.net.callback.ApiCallback;
import com.vise.xsnow.net.exception.ApiException;
import com.yhrjkf.woyundong.App;
import com.yhrjkf.woyundong.R;
import com.yhrjkf.woyundong.activity.MainActivity;
import com.yhrjkf.woyundong.bean.LoginBean;
import com.yhrjkf.woyundong.bean.SignBean;
import com.yhrjkf.woyundong.event.JianBuXingEvent;
import com.yhrjkf.woyundong.http.WooSportApi;

public class PublishDialog extends Dialog {

    private RelativeLayout rlMain;

    private Context context;

    private LinearLayout llBtnArticle, llBtnMiniBlog, llBtnLetter, llBtnPhoto,llBtnMenu;

    private Handler handler;

    private ImageView ivMenu;

    private KProgressHUD mHud;

    public PublishDialog(Context context) {
        this(context, R.style.main_publishdialog_style);
    }

    private PublishDialog(Context context, int theme) {
        super(context, theme);
        this.context = context;
        init();
    }

    /**
     * 初始化
     */
    private void init() {
        handler = new Handler();
        //填充视图
        setContentView(R.layout.main_dialog_publish);
        rlMain = (RelativeLayout) findViewById(R.id.mainPublish_dialog_rlMain);

        llBtnArticle = (LinearLayout) findViewById(R.id.mainPublish_dialog_llBtnArticle);
        llBtnMiniBlog = (LinearLayout) findViewById(R.id.mainPublish_dialog_llBtnMiniBlog);
        llBtnLetter = (LinearLayout) findViewById(R.id.mainPublish_dialog_llBtnLetter);
        llBtnPhoto = (LinearLayout) findViewById(R.id.mainPublish_dialog_llBtnPhoto);
        llBtnMenu = (LinearLayout) findViewById(R.id.mainPublish_dialog_llBtnMenu);
        ivMenu = (ImageView) findViewById(R.id.mainPublish_dialog_ivMenu);


        llBtnMenu.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                outputDialog(null);
            }
        });
        rlMain.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                outputDialog(null);
            }
        });

        setArticleBtnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                outputDialog(new Runnable() {
                    @Override
                    public void run() {

                        BusFactory.getBus().post(new JianBuXingEvent().setShowId(2));
                    }
                });
            }
        });

        setLetterBtnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                outputDialog(new Runnable() {
                    @Override
                    public void run() {

                        BusFactory.getBus().post(new JianBuXingEvent().setShowId(1));
                    }
                });
            }
        });

        setMiniBlogBtnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                WooSportApi.getInstance().startUpdateUser(getContext(), new ApiCallback<LoginBean>() {
                    @Override
                    public void onStart() {
                        mHud = KProgressHUD.create(getContext())
                                .setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)
                                .setLabel("数据同步中")
                                .setCancellable(true);
                        mHud.show();
                    }

                    @Override
                    public void onError(ApiException e) {
                        ViseLog.e(e);
                    }

                    @Override
                    public void onCompleted() {
                        mHud.dismiss();
                        Toast.makeText(getContext(),"数据同步成功！",Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onNext(LoginBean loginBean) {
                        App.newInstance().saveUserBean(loginBean);
                    }
                });
            }
        });

        setPhotoBtnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                WooSportApi.getInstance().startPostSign(getContext(),
                        String.valueOf(App.newInstance().getUserBean().getId()), new ApiCallback<SignBean>() {
                            @Override
                            public void onStart() {
                                mHud = KProgressHUD.create(getContext())
                                        .setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)
                                        .setCancellable(true);
                                mHud.show();
                            }

                            @Override
                            public void onError(ApiException e) {
                                ViseLog.e(e);
                            }

                            @Override
                            public void onCompleted() {
                                mHud.dismiss();
                            }

                            @Override
                            public void onNext(SignBean signBean) {
                                String code = signBean.getRecode();
                                if (code.equals("200")){
                                    Toast.makeText(getContext(),"签到成功!",Toast.LENGTH_SHORT).show();
                                }else if (code.equals("403")){
                                    Toast.makeText(getContext(),"已经签到了!",Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
            }
        });
    }


    /**
     * 进入对话框（带动画）
     */
    private void inputDialog() {
        llBtnArticle.setVisibility(View.INVISIBLE);
        llBtnMiniBlog.setVisibility(View.INVISIBLE);
        llBtnLetter.setVisibility(View.INVISIBLE);
        llBtnPhoto.setVisibility(View.INVISIBLE);
        //背景动画
        rlMain.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_fade_in));
        //菜单按钮动画
        ivMenu.setVisibility(View.VISIBLE);
        ivMenu.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_rotate_right));
        //选项动画
        llBtnArticle.setVisibility(View.VISIBLE);
        llBtnArticle.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_in));
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                llBtnMiniBlog.setVisibility(View.VISIBLE);
                llBtnMiniBlog.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_in));
            }
        }, 50);
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                llBtnLetter.setVisibility(View.VISIBLE);
                llBtnLetter.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_in));
            }
        }, 100);
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                llBtnPhoto.setVisibility(View.VISIBLE);
                llBtnPhoto.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_in));
            }
        }, 150);
    }


    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (isShowing()) {
            outputDialog(null);
            return true;
        }
        else {
            return super.onKeyDown(keyCode, event);
        }
    }



    /**
     * 取消对话框（带动画）
     */
    private void outputDialog(final Runnable hideRunable) {
        //退出动画
//        rlMain.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_fade_out));
        ivMenu.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_rotate_left));
        ivMenu.setVisibility(View.INVISIBLE);
        llBtnArticle.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_out));
        llBtnArticle.setVisibility(View.INVISIBLE);
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                llBtnMiniBlog.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_out));
                llBtnMiniBlog.setVisibility(View.INVISIBLE);
            }
        }, 50);
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                llBtnLetter.startAnimation(AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_out));
                llBtnLetter.setVisibility(View.INVISIBLE);
            }
        }, 100);
        handler.postDelayed(new Runnable() {

            @Override
            public void run() {
                Animation am = AnimationUtils.loadAnimation(context, R.anim.mainactivity_push_bottom_out);
                am.setAnimationListener(new Animation.AnimationListener() {
                    @Override
                    public void onAnimationStart(Animation animation) {

                    }

                    @Override
                    public void onAnimationEnd(Animation animation) {
                        dismiss();
                        //animateOut();
                        if (hideRunable!=null){
                            hideRunable.run();
                        }
                    }


                    @Override
                    public void onAnimationRepeat(Animation animation) {

                    }
                });
                llBtnPhoto.startAnimation(am);
                llBtnPhoto.setVisibility(View.INVISIBLE);
            }
        }, 150);
    }

    @Override
    public void show() {
        super.show();
        inputDialog();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //全屏
        WindowManager.LayoutParams params = getWindow().getAttributes();
        params.height = ViewGroup.LayoutParams.MATCH_PARENT;
        params.width = ViewGroup.LayoutParams.MATCH_PARENT;
        getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
    }


    public PublishDialog setArticleBtnClickListener(android.view.View.OnClickListener clickListener) {
        llBtnArticle.setOnClickListener(clickListener);
        return this;
    }

    public PublishDialog setMiniBlogBtnClickListener(android.view.View.OnClickListener clickListener) {
        llBtnMiniBlog.setOnClickListener(clickListener);
        return this;
    }

    public PublishDialog setLetterBtnClickListener(android.view.View.OnClickListener clickListener) {
        llBtnLetter.setOnClickListener(clickListener);
        return this;
    }

    public PublishDialog setPhotoBtnClickListener(android.view.View.OnClickListener clickListener) {
        llBtnPhoto.setOnClickListener(clickListener);
        return this;
    }


}
