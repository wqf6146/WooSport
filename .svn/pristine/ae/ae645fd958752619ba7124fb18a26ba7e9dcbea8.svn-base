package com.yhrjkf.woyundong.activity;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.yhrjkf.woyundong.R;
import com.yhrjkf.woyundong.tools.AppConfig;

public class RegisterActivity extends Activity implements OnClickListener {

	private TextView tv_register_back, tv_register_wancheng;
	private EditText ed_register_sjh, ed_register_mm, ed_register_zcmm,
			ed_register_yzm;
	private String jsonString;
	private String errcode;
	private Toast mToast;
	Handler handler;
	private Button bt_yzm;
	String rellString = "1234";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		if ((getIntent().getFlags() & Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT) != 0) {
			finish();
			return;
		}
		setContentView(R.layout.activity_register);
		tv_register_back = (TextView) findViewById(R.id.tv_register_back);
		tv_register_wancheng = (TextView) findViewById(R.id.tv_register_wancheng);
		ed_register_sjh = (EditText) findViewById(R.id.ed_register_sjh);
		ed_register_mm = (EditText) findViewById(R.id.ed_register_mm);
		ed_register_zcmm = (EditText) findViewById(R.id.ed_register_zcmm);
		bt_yzm = (Button) findViewById(R.id.bt_yzm);
		tv_register_back.setOnClickListener(this);
		tv_register_wancheng.setOnClickListener(this);
		bt_yzm.setOnClickListener(this);
		ed_register_yzm = (EditText) findViewById(R.id.ed_register_yzm);

		handler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				super.handleMessage(msg);
				bt_yzm.setText(msg.arg1 + "s");
				if (msg.arg1 == 0) {

					bt_yzm.setText("获取验证码");
					bt_yzm.setClickable(true);
				}
			}
		};

	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.tv_register_back:
			finish();
			break;
		case R.id.bt_yzm:
			bt_yzm.setClickable(false);
			new Thread(sendable).start();
			HttpUtils httpUtilss = new HttpUtils();
			httpUtilss.send(HttpMethod.GET, AppConfig.NOTE + "?type=1&phone="
					+ ed_register_sjh.getText().toString(),
					new RequestCallBack<String>() {

						@Override
						public void onFailure(HttpException arg0, String arg1) {
							// TODO Auto-generated method stub

						}

						@Override
						public void onSuccess(ResponseInfo<String> responseInfo) {
							// TODO Auto-generated method stub
							Log.i("result", responseInfo.result);
							try {
								JSONObject jsonObject = new JSONObject(
										responseInfo.result);
								rellString = jsonObject.getString("message");

							} catch (JSONException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}

						}
					});

			break;

		case R.id.tv_register_wancheng:
			if (ed_register_yzm.getText() == null
					|| ed_register_yzm.getText().equals("")) {
				showToast("请输入验证码");
			} else {

				if (ed_register_yzm.getText().toString().equals(rellString)) {
					if ((ed_register_mm.getText().toString() == null)
							|| ed_register_zcmm.getText().toString() == null
							|| (ed_register_sjh.getText().toString()) == null) {
						showToast("不能为空");
					} else {
						if (ed_register_mm.getText().toString()
								.equals(ed_register_zcmm.getText().toString())) {
							HttpUtils httpUtils = new HttpUtils();
							RequestParams params = new RequestParams("UTF-8");
							params.addBodyParameter("phone", ed_register_sjh
									.getText().toString());
							params.addBodyParameter("password", ed_register_mm
									.getText().toString());
							httpUtils.send(HttpMethod.POST, AppConfig.REGISTER,
									params, new RequestCallBack<String>() {

										@Override
										public void onFailure(
												HttpException arg0, String arg1) {
											// TODO Auto-generated method stub

										}

										@Override
										public void onSuccess(
												ResponseInfo<String> responseInfo) {
											// TODO Auto-generated method stub
											jsonString = responseInfo.result;
											Log.i("result", jsonString);
											try {
												JSONObject jsonObject = new JSONObject(
														jsonString);
												errcode = jsonObject.get(
														"Recode").toString();
												Log.i("errcode", errcode);
												if (errcode.equals("200")) {
													showToast("注册成功");
													finish();
												} else if (errcode
														.equals("400")) {
													showToast("用户已注册");
												}
											} catch (JSONException e) {
												// TODO Auto-generated catch
												// block
												e.printStackTrace();
											}

										}
									});

						} else {
							showToast("两次密码输入不一致");
						}
					}

				} else {
					showToast("验证码输入有误");
				}
			}
			break;

		default:
			break;
		}

	}

	public void showToast(String text) {
		if (mToast == null) {
			mToast = Toast.makeText(getApplicationContext(), text,
					Toast.LENGTH_SHORT);
		} else {
			mToast.setText(text);
			mToast.setDuration(Toast.LENGTH_SHORT);
		}
		mToast.show();
	}

	Runnable sendable = new Runnable() {
		public void run() {
			int a = 60;
			while (-1 < a) {
				try {
					Thread.sleep(1000);
					Log.i("TAG", "+++++++++++++++++++++");
					Message message = new Message();
					message.arg1 = a;
					handler.sendMessage(message);
					a--;
				} catch (InterruptedException e) {
					e.printStackTrace();
				}

			}

		};
	};

}
